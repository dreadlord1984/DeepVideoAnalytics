sudo: required

language: python

python:
  - "2.7"

services:
  - docker
  - postgresql
  - rabbitmq
  - redis-server

addons:
  postgresql: "9.6"

virtualenv:
  system_site_packages: true

env:
  global:
    - AUTH_DISABLED=1
    - SECRET_KEY=123213123123213213
    - LAUNCH_BY_NAME_indexer_inception=1
    - LAUNCH_BY_NAME_retriever_inception=1
    - LAUNCH_BY_NAME_detector_coco=1
    - TRAVISTEST=1
    - INIT_MODELS=
    - export BLASLDFLAGS="/usr/lib/libopenblas.so.0"

before_install:
  - sudo apt-get -qq update
  - wget https://www.dropbox.com/s/bjyzb8hytdwp2tp/ffmpeg-release-64bit-static.tar.xz && tar xvfJ ffmpeg-release-64bit-static.tar.xz
  - shasum ffmpeg-release-64bit-static.tar.xz | awk '$1!="a93bce9e510afef02f7e2592f6b5d117dcd08854"{exit 1}'
  - sudo mv ffmpeg*/* /bin/
  - sudo apt-get -qq install -y pkg-config python-dev unzip swig swig3.0 libopenblas-dev liblapack-dev libopencv-dev libhdf5-dev python-pip libav-tools libjpeg-dev  libpng-dev  libtiff-dev  libjasper-dev  python-numpy python-scipy  python-pycurl  python-opencv
  - sudo dpkg -L python-opencv
  - sudo wget --quiet https://yt-dl.org/downloads/latest/youtube-dl -O /bin/youtube-dl
  - sudo chmod a+rx /bin/youtube-dl
  - youtube-dl -U
  - pip install -q --only-binary=numpy,scipy numpy scipy
  - pip install -q https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.8.0-cp27-none-linux_x86_64.whl
  - pip install -q --no-deps keras
  - pip install -q --no-deps h5py
  - pip install -q --no-cache-dir http://download.pytorch.org/whl/cpu/torch-0.3.1-cp27-cp27mu-linux_x86_64.whl
  - pip install -q torchvision
  - git clone --recursive https://github.com/facebookresearch/faiss && cd faiss && git reset --hard cdc5a8b7b876fb636362c724f54e06fe889e3ac7 && ./configure && sudo make -j $(nproc) && sudo make install && sudo make py && cd ..
#  - mkdir -p dlib && git clone https://github.com/davisking/dlib.git dlib/ && cd  dlib/ && python setup.py install --yes USE_AVX_INSTRUCTIONS && cd ..
  - sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose

install: "pip install -q -r requirements.txt > /dev/null"


before_script:
  - mkdir ~/media
  - export PYTHONPATH="${PYTHONPATH}:../faiss/python/"
  - export PYTHONPATH="${PYTHONPATH}:repos/"
  - export PYTHONPATH="${PYTHONPATH}:repos/tf_ctpn_cpu/"
  - cd repos/lopq/python && python setup.py install && cd ../../..
  - cd repos/tf_ctpn_cpu/lib/utils && ./make.sh && cd ../../../..
  - cd server && ./migrate.sh && cd ..
  - cd tests/data && wget --quiet https://www.dropbox.com/s/t4bgkh2w2ow8o10/WorldIsNotEnough.mp4 && cd ../..
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start
  - cd server && python manage.py runserver 8000 &
  - cp tests/data/test_config.json config.json


script:
  - cd server && ./init_fs.py && cd ..
  - cd tests && python test_ci.py && python test_ci_face.py && cd ..
  - cd server && ./launch_from_env.py && cd ..
  - cd tests && python test_ci_search.py && cd ..
  - cd server && python scripts/generate_testing_token.py && cp creds.json ../ && cd ..
  - python tests/test_ci_client.py
  - wget --quiet localhost:8000
  - wget --quiet localhost:8000/videos/
  - wget --quiet localhost:8000/queries/
  - wget --quiet localhost:8000/queries/1/
  - wget --quiet localhost:8000/tasks/
  - wget --quiet localhost:8000/retrievers/
  - wget --quiet localhost:8000/textsearch/
  - wget --quiet localhost:8000/models/
  - wget --quiet localhost:8000/indexes/
  - wget --quiet localhost:8000/api/users/
  - wget --quiet localhost:8000/api/videos/
  - wget --quiet localhost:8000/api/tubes/
  - wget --quiet localhost:8000/api/frames/
  - wget --quiet localhost:8000/api/regionrelations/
  - wget --quiet localhost:8000/api/tuberelations/
  - wget --quiet localhost:8000/api/tuberegionrelations/
  - wget --quiet localhost:8000/api/segments/
  - wget --quiet localhost:8000/api/regions/
  - wget --quiet localhost:8000/api/queries/
  - wget --quiet localhost:8000/api/queryresults/
  - wget --quiet localhost:8000/api/indexentries/
  - wget --quiet localhost:8000/api/events/
  - wget --quiet localhost:8000/api/restarts/
  - wget --quiet localhost:8000/api/workers/
  - wget --quiet localhost:8000/api/system_state/
  - wget --quiet localhost:8000/api/retriever_state/
  - fuser -k 8000/tcp
#  - ./dvactl start &
#  - sleep 420 && docker logs webserver
#  - ./dvactl clean
